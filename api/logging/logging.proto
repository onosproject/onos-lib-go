/*
Copyright 2020-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package onos.lib.go.logging;


enum ResponseStatus {
    OK = 0;
    FAILED = 1;
    PRECONDITION_FAILED = 2;
}

// Logger level
enum Level {
    // Debug log level
    DEBUG = 0;

    // Info log level
    INFO = 1;

    // Error log level
    ERROR = 2;

    // DPanic log level
    DPANIC = 3;

    // Panic log level
    PANIC = 4;

    // Fatal log level
    FATAL = 5;

}

// logger service provides rpc functions to controller a logger remotely
service logger {
    // Sets a logger level
    rpc SetLevel(SetLevelRequest) returns (SetLevelResponse);

    // Sets a sink for a logger
    rpc SetSink(SetSinkRequest) returns (SetSinkResponse);

}

// SetLevelRequest request for setting a logger level
message SetLevelRequest {
    // logger name
    string logger_name = 1;
    // logger level
    Level level = 2;
}


// SetLevelResponse response for setting a logger level
message SetLevelResponse {
    ResponseStatus response_status = 1;
}

// SetSinkRequest request for setting a sink
message SetSinkRequest {
    string logger_name = 1;
    string topic = 2;
    string key = 3;
    string address = 4;
}

// SetSinkResponse response for setting a sink
message SetSinkResponse {
    ResponseStatus response_status = 1;
}

