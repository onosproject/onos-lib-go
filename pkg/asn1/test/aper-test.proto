// SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
//
// SPDX-License-Identifier: Apache-2.0

////////////////////// aper-test.proto //////////////////////

syntax = "proto3";

package aper.test.v1;
option go_package = "pkg/asn1/test";

import "asn1/v1/asn1.proto";

message TestUnconstrainedInt {
  int32 attrUciA = 1;
  int64 attrUciB = 2;
}

// Add in constraints to control the APER encoding
message TestConstrainedInt {
  // @inject_tag: aper:"valueLB:10,valueUB:100"
  int32 attrCiA = 1;
  // @inject_tag: aper:"valueLB:10"
  int64 attrCiB = 2;
  // @inject_tag: aper:"valueUB:100"
  int64 attrCiC = 3;
  // @inject_tag: aper:"valueLB:10,valueUB:20"
  int64 attrCiD = 4;
  // @inject_tag: aper:"valueLB:10,valueUB:10"
  int64 attrCiE = 5;
}

message TestBitString {
  asn1.v1.BitString attrBs1 = 1;

  // @inject_tag: aper:"sizeLB:20,sizeUB:20"
  asn1.v1.BitString attrBs2 = 2;

  // @inject_tag: aper:"sizeLB:22,sizeUB:32"
  asn1.v1.BitString attrBs3 = 3;

  // @inject_tag: aper:"valueExt,sizeLB:28,sizeUB:32"
  asn1.v1.BitString attrBs4 = 4;

  // @inject_tag: aper:"optional,sizeLB:32,sizeUB:36"
  optional asn1.v1.BitString attrBs5 = 5;
}

message TestChoices {
  string otherAttr = 1;

  oneof Choice1 {
    // @inject_tag: aper:"choiceIdx:1,valueExt"
    int32 choice1A = 10;
  }

  oneof Choice2 {
    // @inject_tag: aper:"choiceIdx:1,valueExt"
    int32 choice2A = 20;
    // @inject_tag: aper:"choiceIdx:2,valueExt"
    string choice2B = 21;
  }

  oneof Choice3 {
    // @inject_tag: aper:"choiceIdx:1,valueExt"
    int32 choice3A = 30;
    // @inject_tag: aper:"choiceIdx:2,valueExt"
    string choice3B = 31;
    // @inject_tag: aper:"choiceIdx:3,valueExt"
    bytes choice3C = 32;
  }

}