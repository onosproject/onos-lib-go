// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.17.1
// source: pkg/asn1/test/aper-test.proto

package test

import (
	asn1 "github.com/onosproject/onos-lib-go/api/asn1/v1/asn1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestUnconstrainedInt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrUciA int32 `protobuf:"varint,1,opt,name=attrUciA,proto3" json:"attrUciA,omitempty"`
	AttrUciB int64 `protobuf:"varint,2,opt,name=attrUciB,proto3" json:"attrUciB,omitempty"`
}

func (x *TestUnconstrainedInt) Reset() {
	*x = TestUnconstrainedInt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_asn1_test_aper_test_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestUnconstrainedInt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestUnconstrainedInt) ProtoMessage() {}

func (x *TestUnconstrainedInt) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_asn1_test_aper_test_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestUnconstrainedInt.ProtoReflect.Descriptor instead.
func (*TestUnconstrainedInt) Descriptor() ([]byte, []int) {
	return file_pkg_asn1_test_aper_test_proto_rawDescGZIP(), []int{0}
}

func (x *TestUnconstrainedInt) GetAttrUciA() int32 {
	if x != nil {
		return x.AttrUciA
	}
	return 0
}

func (x *TestUnconstrainedInt) GetAttrUciB() int64 {
	if x != nil {
		return x.AttrUciB
	}
	return 0
}

// Add in constraints to control the APER encoding
type TestConstrainedInt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:10,valueUB:100"
	AttrCiA int32 `protobuf:"varint,1,opt,name=attrCiA,proto3" json:"attrCiA,omitempty" aper:"valueLB:10,valueUB:100"`
	// @inject_tag: aper:"valueLB:10"
	AttrCiB int64 `protobuf:"varint,2,opt,name=attrCiB,proto3" json:"attrCiB,omitempty" aper:"valueLB:10"`
	// @inject_tag: aper:"valueUB:100"
	AttrCiC int64 `protobuf:"varint,3,opt,name=attrCiC,proto3" json:"attrCiC,omitempty" aper:"valueUB:100"`
	// @inject_tag: aper:"valueLB:10,valueUB:20"
	AttrCiD int64 `protobuf:"varint,4,opt,name=attrCiD,proto3" json:"attrCiD,omitempty" aper:"valueLB:10,valueUB:20"`
	// @inject_tag: aper:"valueLB:10,valueUB:10"
	AttrCiE int64 `protobuf:"varint,5,opt,name=attrCiE,proto3" json:"attrCiE,omitempty" aper:"valueLB:10,valueUB:10"`
}

func (x *TestConstrainedInt) Reset() {
	*x = TestConstrainedInt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_asn1_test_aper_test_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestConstrainedInt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestConstrainedInt) ProtoMessage() {}

func (x *TestConstrainedInt) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_asn1_test_aper_test_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestConstrainedInt.ProtoReflect.Descriptor instead.
func (*TestConstrainedInt) Descriptor() ([]byte, []int) {
	return file_pkg_asn1_test_aper_test_proto_rawDescGZIP(), []int{1}
}

func (x *TestConstrainedInt) GetAttrCiA() int32 {
	if x != nil {
		return x.AttrCiA
	}
	return 0
}

func (x *TestConstrainedInt) GetAttrCiB() int64 {
	if x != nil {
		return x.AttrCiB
	}
	return 0
}

func (x *TestConstrainedInt) GetAttrCiC() int64 {
	if x != nil {
		return x.AttrCiC
	}
	return 0
}

func (x *TestConstrainedInt) GetAttrCiD() int64 {
	if x != nil {
		return x.AttrCiD
	}
	return 0
}

func (x *TestConstrainedInt) GetAttrCiE() int64 {
	if x != nil {
		return x.AttrCiE
	}
	return 0
}

type TestBitString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrBs1 *asn1.BitString `protobuf:"bytes,1,opt,name=attrBs1,proto3" json:"attrBs1,omitempty"`
	// @inject_tag: aper:"sizeLB:20,sizeUB:20"
	AttrBs2 *asn1.BitString `protobuf:"bytes,2,opt,name=attrBs2,proto3" json:"attrBs2,omitempty" aper:"sizeLB:20,sizeUB:20"`
	// @inject_tag: aper:"sizeLB:22,sizeUB:32"
	AttrBs3 *asn1.BitString `protobuf:"bytes,3,opt,name=attrBs3,proto3" json:"attrBs3,omitempty" aper:"sizeLB:22,sizeUB:32"`
	// @inject_tag: aper:"valueExt,sizeLB:28,sizeUB:32"
	AttrBs4 *asn1.BitString `protobuf:"bytes,4,opt,name=attrBs4,proto3" json:"attrBs4,omitempty" aper:"valueExt,sizeLB:28,sizeUB:32"`
	// @inject_tag: aper:"optional,sizeLB:32,sizeUB:36"
	AttrBs5 *asn1.BitString `protobuf:"bytes,5,opt,name=attrBs5,proto3,oneof" json:"attrBs5,omitempty" aper:"optional,sizeLB:32,sizeUB:36"`
}

func (x *TestBitString) Reset() {
	*x = TestBitString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_asn1_test_aper_test_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestBitString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestBitString) ProtoMessage() {}

func (x *TestBitString) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_asn1_test_aper_test_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestBitString.ProtoReflect.Descriptor instead.
func (*TestBitString) Descriptor() ([]byte, []int) {
	return file_pkg_asn1_test_aper_test_proto_rawDescGZIP(), []int{2}
}

func (x *TestBitString) GetAttrBs1() *asn1.BitString {
	if x != nil {
		return x.AttrBs1
	}
	return nil
}

func (x *TestBitString) GetAttrBs2() *asn1.BitString {
	if x != nil {
		return x.AttrBs2
	}
	return nil
}

func (x *TestBitString) GetAttrBs3() *asn1.BitString {
	if x != nil {
		return x.AttrBs3
	}
	return nil
}

func (x *TestBitString) GetAttrBs4() *asn1.BitString {
	if x != nil {
		return x.AttrBs4
	}
	return nil
}

func (x *TestBitString) GetAttrBs5() *asn1.BitString {
	if x != nil {
		return x.AttrBs5
	}
	return nil
}

var File_pkg_asn1_test_aper_test_proto protoreflect.FileDescriptor

var file_pkg_asn1_test_aper_test_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x73, 0x6e, 0x31, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x2f,
	0x61, 0x70, 0x65, 0x72, 0x2d, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x12, 0x61,
	0x73, 0x6e, 0x31, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x4e, 0x0a, 0x14, 0x54, 0x65, 0x73, 0x74, 0x55, 0x6e, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x74,
	0x72, 0x55, 0x63, 0x69, 0x41, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x74, 0x74,
	0x72, 0x55, 0x63, 0x69, 0x41, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x72, 0x55, 0x63, 0x69,
	0x42, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x55, 0x63, 0x69,
	0x42, 0x22, 0x96, 0x01, 0x0a, 0x12, 0x54, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x72,
	0x43, 0x69, 0x41, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x74, 0x74, 0x72, 0x43,
	0x69, 0x41, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x72, 0x43, 0x69, 0x42, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x74, 0x74, 0x72, 0x43, 0x69, 0x42, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x74, 0x74, 0x72, 0x43, 0x69, 0x43, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61,
	0x74, 0x74, 0x72, 0x43, 0x69, 0x43, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x72, 0x43, 0x69,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x74, 0x74, 0x72, 0x43, 0x69, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x72, 0x43, 0x69, 0x45, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x61, 0x74, 0x74, 0x72, 0x43, 0x69, 0x45, 0x22, 0x86, 0x02, 0x0a, 0x0d, 0x54,
	0x65, 0x73, 0x74, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x07,
	0x61, 0x74, 0x74, 0x72, 0x42, 0x73, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x07, 0x61, 0x74, 0x74, 0x72, 0x42, 0x73, 0x31, 0x12, 0x2c, 0x0a, 0x07, 0x61, 0x74,
	0x74, 0x72, 0x42, 0x73, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73,
	0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x07, 0x61, 0x74, 0x74, 0x72, 0x42, 0x73, 0x32, 0x12, 0x2c, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x72,
	0x42, 0x73, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x61,
	0x74, 0x74, 0x72, 0x42, 0x73, 0x33, 0x12, 0x2c, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x72, 0x42, 0x73,
	0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x61, 0x74, 0x74,
	0x72, 0x42, 0x73, 0x34, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x72, 0x42, 0x73, 0x35, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x61, 0x74, 0x74,
	0x72, 0x42, 0x73, 0x35, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x42, 0x73, 0x35, 0x42, 0x0f, 0x5a, 0x0d, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x73, 0x6e, 0x31, 0x2f,
	0x74, 0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_asn1_test_aper_test_proto_rawDescOnce sync.Once
	file_pkg_asn1_test_aper_test_proto_rawDescData = file_pkg_asn1_test_aper_test_proto_rawDesc
)

func file_pkg_asn1_test_aper_test_proto_rawDescGZIP() []byte {
	file_pkg_asn1_test_aper_test_proto_rawDescOnce.Do(func() {
		file_pkg_asn1_test_aper_test_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_asn1_test_aper_test_proto_rawDescData)
	})
	return file_pkg_asn1_test_aper_test_proto_rawDescData
}

var file_pkg_asn1_test_aper_test_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pkg_asn1_test_aper_test_proto_goTypes = []interface{}{
	(*TestUnconstrainedInt)(nil), // 0: aper.test.v1.TestUnconstrainedInt
	(*TestConstrainedInt)(nil),   // 1: aper.test.v1.TestConstrainedInt
	(*TestBitString)(nil),        // 2: aper.test.v1.TestBitString
	(*asn1.BitString)(nil),       // 3: asn1.v1.BitString
}
var file_pkg_asn1_test_aper_test_proto_depIdxs = []int32{
	3, // 0: aper.test.v1.TestBitString.attrBs1:type_name -> asn1.v1.BitString
	3, // 1: aper.test.v1.TestBitString.attrBs2:type_name -> asn1.v1.BitString
	3, // 2: aper.test.v1.TestBitString.attrBs3:type_name -> asn1.v1.BitString
	3, // 3: aper.test.v1.TestBitString.attrBs4:type_name -> asn1.v1.BitString
	3, // 4: aper.test.v1.TestBitString.attrBs5:type_name -> asn1.v1.BitString
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_pkg_asn1_test_aper_test_proto_init() }
func file_pkg_asn1_test_aper_test_proto_init() {
	if File_pkg_asn1_test_aper_test_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_asn1_test_aper_test_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestUnconstrainedInt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_asn1_test_aper_test_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestConstrainedInt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_asn1_test_aper_test_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestBitString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_asn1_test_aper_test_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_asn1_test_aper_test_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_asn1_test_aper_test_proto_goTypes,
		DependencyIndexes: file_pkg_asn1_test_aper_test_proto_depIdxs,
		MessageInfos:      file_pkg_asn1_test_aper_test_proto_msgTypes,
	}.Build()
	File_pkg_asn1_test_aper_test_proto = out.File
	file_pkg_asn1_test_aper_test_proto_rawDesc = nil
	file_pkg_asn1_test_aper_test_proto_goTypes = nil
	file_pkg_asn1_test_aper_test_proto_depIdxs = nil
}
